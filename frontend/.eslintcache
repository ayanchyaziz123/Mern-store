[{"/home/aziz/Desktop/MERN Store/frontend/src/index.js":"1","/home/aziz/Desktop/MERN Store/frontend/src/store.js":"2","/home/aziz/Desktop/MERN Store/frontend/src/reportWebVitals.js":"3","/home/aziz/Desktop/MERN Store/frontend/src/App.js":"4","/home/aziz/Desktop/MERN Store/frontend/src/reducers/cartReducers.js":"5","/home/aziz/Desktop/MERN Store/frontend/src/reducers/userReducers.js":"6","/home/aziz/Desktop/MERN Store/frontend/src/reducers/productReducers.js":"7","/home/aziz/Desktop/MERN Store/frontend/src/reducers/orderReducers.js":"8","/home/aziz/Desktop/MERN Store/frontend/src/reducers/contactReducer.js":"9","/home/aziz/Desktop/MERN Store/frontend/src/components/Header2.js":"10","/home/aziz/Desktop/MERN Store/frontend/src/components/Footer.js":"11","/home/aziz/Desktop/MERN Store/frontend/src/components/Header.js":"12","/home/aziz/Desktop/MERN Store/frontend/src/screens/HomeScreen.js":"13","/home/aziz/Desktop/MERN Store/frontend/src/screens/RegisterScreen.js":"14","/home/aziz/Desktop/MERN Store/frontend/src/screens/CartScreen.js":"15","/home/aziz/Desktop/MERN Store/frontend/src/screens/PaymentScreen.js":"16","/home/aziz/Desktop/MERN Store/frontend/src/screens/ShippingScreen.js":"17","/home/aziz/Desktop/MERN Store/frontend/src/screens/OrderScreen.js":"18","/home/aziz/Desktop/MERN Store/frontend/src/screens/UserListScreen.js":"19","/home/aziz/Desktop/MERN Store/frontend/src/screens/ProductScreen.js":"20","/home/aziz/Desktop/MERN Store/frontend/src/screens/UserEditScreen.js":"21","/home/aziz/Desktop/MERN Store/frontend/src/screens/ProductListScreen.js":"22","/home/aziz/Desktop/MERN Store/frontend/src/screens/PlaceOrderScreen.js":"23","/home/aziz/Desktop/MERN Store/frontend/src/screens/ProductEditScreen.js":"24","/home/aziz/Desktop/MERN Store/frontend/src/screens/TopReviewProductScreen.js":"25","/home/aziz/Desktop/MERN Store/frontend/src/screens/PriceRangeScreen.js":"26","/home/aziz/Desktop/MERN Store/frontend/src/screens/ContactScreen.js":"27","/home/aziz/Desktop/MERN Store/frontend/src/screens/OTPScreen.js":"28","/home/aziz/Desktop/MERN Store/frontend/src/screens/DashboardScreen.js":"29","/home/aziz/Desktop/MERN Store/frontend/src/screens/OrderListScreen.js":"30","/home/aziz/Desktop/MERN Store/frontend/src/screens/AdminContactScreen.js":"31","/home/aziz/Desktop/MERN Store/frontend/src/components/SearchBox.js":"32","/home/aziz/Desktop/MERN Store/frontend/src/components/ProductOffer.js":"33","/home/aziz/Desktop/MERN Store/frontend/src/components/Message.js":"34","/home/aziz/Desktop/MERN Store/frontend/src/components/ProductOffer2.js":"35","/home/aziz/Desktop/MERN Store/frontend/src/components/Navs.js":"36","/home/aziz/Desktop/MERN Store/frontend/src/components/Product.js":"37","/home/aziz/Desktop/MERN Store/frontend/src/components/Navs2.js":"38","/home/aziz/Desktop/MERN Store/frontend/src/components/Loader.js":"39","/home/aziz/Desktop/MERN Store/frontend/src/components/Paginate.js":"40","/home/aziz/Desktop/MERN Store/frontend/src/components/SearchRam.js":"41","/home/aziz/Desktop/MERN Store/frontend/src/components/SearchSlider.js":"42","/home/aziz/Desktop/MERN Store/frontend/src/components/ProductCarousel.js":"43","/home/aziz/Desktop/MERN Store/frontend/src/components/FormContainer.js":"44","/home/aziz/Desktop/MERN Store/frontend/src/components/Rating.js":"45","/home/aziz/Desktop/MERN Store/frontend/src/components/ProductCompareChart.js":"46","/home/aziz/Desktop/MERN Store/frontend/src/constants/orderConstants.js":"47","/home/aziz/Desktop/MERN Store/frontend/src/constants/userConstants.js":"48","/home/aziz/Desktop/MERN Store/frontend/src/constants/cartConstants.js":"49","/home/aziz/Desktop/MERN Store/frontend/src/constants/productConstants.js":"50","/home/aziz/Desktop/MERN Store/frontend/src/constants/contactConstants.js":"51","/home/aziz/Desktop/MERN Store/frontend/src/actions/productActions.js":"52","/home/aziz/Desktop/MERN Store/frontend/src/actions/orderActions.js":"53","/home/aziz/Desktop/MERN Store/frontend/src/actions/userActions.js":"54","/home/aziz/Desktop/MERN Store/frontend/src/admin_components/Todolist.js":"55","/home/aziz/Desktop/MERN Store/frontend/src/admin_components/PieCharts.js":"56","/home/aziz/Desktop/MERN Store/frontend/src/admin_components/AdminSideBar.js":"57","/home/aziz/Desktop/MERN Store/frontend/src/components/CheckoutSteps.js":"58","/home/aziz/Desktop/MERN Store/frontend/src/components/ProductChart.js":"59","/home/aziz/Desktop/MERN Store/frontend/src/actions/cartActions.js":"60","/home/aziz/Desktop/MERN Store/frontend/src/components/SearchBrand.js":"61","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/RegisterScreen2.js":"62","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/EmailVerifyScreen.js":"63","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/LoginScreen.js":"64","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/ProfileScreen.js":"65","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/ResetPassword.js":"66","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/ConfirmPassword.js":"67","/home/aziz/Desktop/MERN Store/frontend/src/screens/CategoryScreen.js":"68","/home/aziz/Desktop/MERN Store/frontend/src/components/Category.js":"69"},{"size":595,"mtime":1637941170341,"results":"70","hashOfConfig":"71"},{"size":2752,"mtime":1658597233456,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":1616789579000,"results":"73","hashOfConfig":"71"},{"size":3566,"mtime":1658649239914,"results":"74","hashOfConfig":"71"},{"size":1486,"mtime":1616789579000,"results":"75","hashOfConfig":"71"},{"size":4784,"mtime":1658649609655,"results":"76","hashOfConfig":"71"},{"size":5676,"mtime":1658657836249,"results":"77","hashOfConfig":"71"},{"size":4105,"mtime":1658603366922,"results":"78","hashOfConfig":"71"},{"size":662,"mtime":1634616062678,"results":"79","hashOfConfig":"71"},{"size":2911,"mtime":1658466235286,"results":"80","hashOfConfig":"71"},{"size":1968,"mtime":1637588276782,"results":"81","hashOfConfig":"71"},{"size":3999,"mtime":1658585414913,"results":"82","hashOfConfig":"71"},{"size":3831,"mtime":1658653479259,"results":"83","hashOfConfig":"71"},{"size":4578,"mtime":1658581373502,"results":"84","hashOfConfig":"71"},{"size":5682,"mtime":1658581324755,"results":"85","hashOfConfig":"71"},{"size":1778,"mtime":1641322143578,"results":"86","hashOfConfig":"71"},{"size":3176,"mtime":1658581376942,"results":"87","hashOfConfig":"71"},{"size":10356,"mtime":1658581343695,"results":"88","hashOfConfig":"71"},{"size":3843,"mtime":1658601625186,"results":"89","hashOfConfig":"71"},{"size":14648,"mtime":1658649197760,"results":"90","hashOfConfig":"71"},{"size":7775,"mtime":1658600960431,"results":"91","hashOfConfig":"71"},{"size":5338,"mtime":1658602445066,"results":"92","hashOfConfig":"71"},{"size":8020,"mtime":1658581358422,"results":"93","hashOfConfig":"71"},{"size":9151,"mtime":1658660294422,"results":"94","hashOfConfig":"71"},{"size":1755,"mtime":1634648271269,"results":"95","hashOfConfig":"71"},{"size":2074,"mtime":1637648163170,"results":"96","hashOfConfig":"71"},{"size":5505,"mtime":1642582608541,"results":"97","hashOfConfig":"71"},{"size":2630,"mtime":1642258778567,"results":"98","hashOfConfig":"71"},{"size":4360,"mtime":1658604495696,"results":"99","hashOfConfig":"71"},{"size":3843,"mtime":1658603668143,"results":"100","hashOfConfig":"71"},{"size":3343,"mtime":1642593343970,"results":"101","hashOfConfig":"71"},{"size":1146,"mtime":1658467096257,"results":"102","hashOfConfig":"71"},{"size":1685,"mtime":1637755629617,"results":"103","hashOfConfig":"71"},{"size":228,"mtime":1616789579000,"results":"104","hashOfConfig":"71"},{"size":1421,"mtime":1658652469479,"results":"105","hashOfConfig":"71"},{"size":1462,"mtime":1658501793403,"results":"106","hashOfConfig":"71"},{"size":1682,"mtime":1658580444565,"results":"107","hashOfConfig":"71"},{"size":3665,"mtime":1658501940794,"results":"108","hashOfConfig":"71"},{"size":412,"mtime":1658506879817,"results":"109","hashOfConfig":"71"},{"size":864,"mtime":1658506070466,"results":"110","hashOfConfig":"71"},{"size":2071,"mtime":1641582684625,"results":"111","hashOfConfig":"71"},{"size":691,"mtime":1638118688500,"results":"112","hashOfConfig":"71"},{"size":1436,"mtime":1634985895621,"results":"113","hashOfConfig":"71"},{"size":378,"mtime":1616789579000,"results":"114","hashOfConfig":"71"},{"size":1886,"mtime":1616789579000,"results":"115","hashOfConfig":"71"},{"size":1902,"mtime":1642007170851,"results":"116","hashOfConfig":"71"},{"size":1240,"mtime":1616789579000,"results":"117","hashOfConfig":"71"},{"size":1756,"mtime":1658596868298,"results":"118","hashOfConfig":"71"},{"size":287,"mtime":1616789579000,"results":"119","hashOfConfig":"71"},{"size":1868,"mtime":1637935544769,"results":"120","hashOfConfig":"71"},{"size":370,"mtime":1634615717528,"results":"121","hashOfConfig":"71"},{"size":7416,"mtime":1658592384260,"results":"122","hashOfConfig":"71"},{"size":6157,"mtime":1658603492286,"results":"123","hashOfConfig":"71"},{"size":8516,"mtime":1658601890461,"results":"124","hashOfConfig":"71"},{"size":2372,"mtime":1642102424248,"results":"125","hashOfConfig":"71"},{"size":587,"mtime":1642103619654,"results":"126","hashOfConfig":"71"},{"size":4013,"mtime":1658641050040,"results":"127","hashOfConfig":"71"},{"size":1593,"mtime":1616789579000,"results":"128","hashOfConfig":"71"},{"size":1724,"mtime":1642579706545,"results":"129","hashOfConfig":"71"},{"size":1447,"mtime":1658467807213,"results":"130","hashOfConfig":"71"},{"size":2063,"mtime":1642170130888,"results":"131","hashOfConfig":"71"},{"size":6761,"mtime":1658592243089,"results":"132","hashOfConfig":"71"},{"size":1158,"mtime":1658589631077,"results":"133","hashOfConfig":"71"},{"size":3558,"mtime":1658588539735,"results":"134","hashOfConfig":"71"},{"size":9640,"mtime":1658604227922,"results":"135","hashOfConfig":"71"},{"size":2591,"mtime":1658589233186,"results":"136","hashOfConfig":"71"},{"size":3666,"mtime":1658592052371,"results":"137","hashOfConfig":"71"},{"size":9440,"mtime":1658654224319,"results":"138","hashOfConfig":"71"},{"size":1575,"mtime":1658654492191,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"160ducy",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"142"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"142"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"142"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"142"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"142"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"142"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"142"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"142"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"142"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"163"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"142"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"142"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"142"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"142"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"142"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"163"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"142"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"142"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"142"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"142"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"163"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"142"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"142"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"142"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"142"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"142"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"142"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"142"},"/home/aziz/Desktop/MERN Store/frontend/src/index.js",[],["321","322"],"/home/aziz/Desktop/MERN Store/frontend/src/store.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/reportWebVitals.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/App.js",["323"],"import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/auth/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/auth/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport TopReviewProductScreen from './screens/TopReviewProductScreen'\nimport Contact from './screens/ContactScreen'\nimport PriceRangeScreen from './screens/PriceRangeScreen'\nimport DashboardScreen from './screens/DashboardScreen'\nimport RegisterScreen2 from './screens/auth/RegisterScreen2'\nimport ResetPassword from './screens/auth/ResetPassword';\nimport AdminContactScreen from './screens/AdminContactScreen';\nimport CategoryScreen from './screens/CategoryScreen';\nimport EmailVerifyScreen from './screens/auth/EmailVerifyScreen'\nimport ConfirmPassword from './screens/auth/ConfirmPassword'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <br></br>\n\n\n      <main className=\"py-3 mt-5 \">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/api/user/password/verify/:id/:token' component={ConfirmPassword} />\n          <Route path='/register' component={RegisterScreen} />\n        <Route path='/register2' component={RegisterScreen2} />\n        <Route path='/api/user/verify/:id/:token' component={EmailVerifyScreen} />\n        <Route path='/reset_password' component={ResetPassword} />\n          <Route path='/profile' component={ProfileScreen} />\n         \n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/topReviewProductScreen' component={TopReviewProductScreen}/>\n          <Route path='/contact' component={Contact}/>\n          <Route path='/priceRange' component={PriceRangeScreen} />\n          <Route path='/dashboard' component={DashboardScreen} />\n        <Route path='/admin/contact' component={AdminContactScreen} />\n        <Route path=\"/category\" component={CategoryScreen} />\n        </Container>\n          \n      \n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","/home/aziz/Desktop/MERN Store/frontend/src/reducers/cartReducers.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/reducers/userReducers.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/reducers/productReducers.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/reducers/orderReducers.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/reducers/contactReducer.js",["324","325","326"],"import {\r\n    CONTACT_LIST_REQUEST,\r\n    CONTACT_LIST_SUCCESS,\r\n    CONTACT_LIST_FAIL,\r\n\r\n    CONTACT_CREATE_REQUEST,\r\n    CONTACT_CREATE_SUCCESS,\r\n    CONTACT_CREATE_FAIL,\r\n\r\n\r\n} from '../constants/contactConstants';\r\n\r\n\r\nexport const contactCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CONTACT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case CONTACT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case CONTACT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","/home/aziz/Desktop/MERN Store/frontend/src/components/Header2.js",[],["327","328"],"/home/aziz/Desktop/MERN Store/frontend/src/components/Footer.js",["329"],"import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nfunction Footer() {\n    return (\n        <footer>\n                <Row className=\"bg-dark text-white p-4 mt-5\">\n                    <Col md={4}>\n\n                        <h4 className=\"text-white\">Links</h4>\n                        <Link to=\"/\" className=\"text-white\">About</Link>\n                        <p>Predict</p>\n                        <p>Top product</p>\n\n                    </Col>\n                    <Col md={4}>\n                        <h5 className=\"text-white\">Our Address</h5>\n                        <address>\n                            121, Zindabazar Road<br></br>\n                            Sylhet, Bangladesh<br></br>\n                            HONG KONG<br></br>\n                            <i class=\"fa fa-phone\"></i>: +852 1234 5678<br></br>\n                            <i class=\"fa fa-fax\"></i>: +852 8765 4321<br></br>\n                            <i class=\"fa fa-envelope\"></i>:\n                            <a href=\"mailto:caaziz9642@gmail.com\" className=\"text-white\">aaziz9642@gmail.com</a>\n                        </address>\n\n                    </Col>\n                    <Col><i class=\"fab fa-facebook-square ct2\"></i>\n                        <i class=\"fab fa-twitter-square ml-2 ct2\"></i>\n                        <i class=\"fab fa-google-plus ml-2 ct2\"></i>\n                        <i class=\"fab fa-instagram-square ml-2 ct2\"></i>\n                        <i class=\"fab fa-youtube ml-2 ct2\"></i>\n                        <i class=\"fab fa-linkedin ml-2 ct2\"></i>\n                        <i class=\"fas fa-envelope ml-2 ct2\"></i>\n                    </Col>\n                    \n                </Row>\n                <Row className=\"bg-dark text-white\">\n                    <Col className=\"text-center py-3\">Copyright &copy; Laptop Store</Col>\n                </Row>\n     \n        </footer>\n    )\n}\n\nexport default Footer\n","/home/aziz/Desktop/MERN Store/frontend/src/components/Header.js",["330","331","332"],"import { React, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown, Image } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport './style.css';\n\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n   \n\n\n\n\n    return (\n        <header>\n            <Navbar className=\"navbar-dark bg-dark pt-1 pb-1 shadow\" expand=\"lg\" fixed=\"top\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n\n                        <Navbar.Brand className=\"mr-0 mr-md-4\">\n\n                            <div>\n                                <div className=\"text-center \" > <i class=\"fas fa-laptop-house\"></i></div>\n                                <div className=\"text-center\">\n\n\n                                    <span class=\"text-info \"> <b>L</b></span><span className=\"text-danger\">i</span>\n                                    <span className=\"text-success\">z</span>\n                                    <span className=\"text-warning\">a</span> S\n\n                                </div>\n                            </div>\n\n\n\n\n\n                        </Navbar.Brand>\n                    </LinkContainer>\n\n                    <LinkContainer to='/cart' className=\"text-white active mr-0 mr-md-4\">\n                        <Nav.Link><i className=\"fas fa-shopping-cart ct\"></i> cart <span class=\"badge badge-info ct3\">{cartItems.length > 0 ? (cartItems.reduce((acc, item) => acc + item.qty, 0)) : null}</span></Nav.Link>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n\n                            {userInfo && userInfo.firstName ? (\n                                <>\n                                    <Image src={`http://localhost:4000/${userInfo.profile_pic}`} width={40}\n                                        height={40} rounded />\n                                    <NavDropdown title={userInfo.firstName} id='username' className=\"active\">\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                    </NavDropdown>\n                                </>\n\n                            ) : (<>\n\n                                <LinkContainer to='/register2'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Register A Account </Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to='/login'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                </LinkContainer>\n                            </>\n                            )}\n\n\n                            {userInfo && userInfo.isAdmin ? (\n                                <>\n                                    <LinkContainer to='/dashboard'>\n                                        <Nav.Link>Dashboard</Nav.Link>\n                                    </LinkContainer>\n                                </>\n\n                            ) : null}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/HomeScreen.js",["333","334","335","336","337","338"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Container, Form, ListGroup } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts } from '../actions/productActions'\nimport ProductOffer2 from '../components/ProductOffer2'\nimport Navs from '../components/Navs'\nimport Navs2 from '../components/Navs2'\nimport Category from '../components/Category'\n\n\n\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n\n\n    const { error, loading, products, categories, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n\n\n            <Row>\n                <Col md={12}>\n                    <ProductOffer2 products={products}/>\n                </Col>\n                <Col md={12}>\n                    <Category categories={categories} />\n                </Col>\n            </Row>\n\n\n\n            <h5 className=\"mt-5 mb-3 text-center\">latest product for you</h5>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div className=\"pt-3\">\n                        <Row className='=\"p-2'>\n                            {/* <Col md={2}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id='default-checkbox'\n                                    label='top review dresses'\n                                    size=\"lg\"\n                                />\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id='default-checkbox'\n                                    label='latest'\n                                />\n                                   <Form.Check\n                                    type=\"checkbox\"\n                                    id='default-checkbox'\n                                    label='top review dresses'\n                                />\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id='default-checkbox'\n                                    label='latest'\n                                />\n                                   <Form.Check\n                                    type=\"checkbox\"\n                                    id='default-checkbox'\n                                    label='top review dresses'\n                                />\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id='default-checkbox'\n                                    label='latest'\n                                />\n\n                            </Col> */}\n                            <Col md={12}>\n\n\n                                <Row>\n\n                                    {products.map(product => (\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\n                                            <Product product={product} />\n                                        </Col>\n                                    ))}\n                                </Row>\n                                <Paginate page={page} pages={pages} keyword={keyword} />\n                            </Col>\n                        </Row>\n\n                    </div>\n            }\n\n        </div>\n\n    )\n}\n\nexport default HomeScreen\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/RegisterScreen.js",["339","340","341"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [mobile, setMobile] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [image, setImage] = useState('');\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password, mobile))\n        }\n\n    }\n\n    return (\n       \n        <FormContainer>\n            <div className=\"card p-3\">\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                    <Form.Group controlId='mobile'>\n                        <Form.Label>Mobile</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='019*******'\n                            value={mobile}\n                            onChange={(e) => setMobile(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n            </div>\n        </FormContainer >\n\n    )\n}\n\nexport default RegisterScreen;\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/CartScreen.js",["342"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n     \n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={`http://localhost:4000/${item.image}`} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            {\n                                                item.offer_percentage ? <>\n                                                    <span className=\"text-tl\">&#2547;{item.price}</span>  <br></br>\n                                                    &#2547;{item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : null}\n                                                \n                                                \n                                                </>:\n                                                <>\n                                                        <span>&#2547;{item.price}</span>\n                                                </>\n                                            }\n                                           \n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h3>\n                                Total &#2547;{cartItems.reduce((acc, item) => acc + item.qty * (item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : item.price), 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-block btn-sm'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","/home/aziz/Desktop/MERN Store/frontend/src/screens/PaymentScreen.js",["343","344"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <div className=\"large-devices-margin\">\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n        </div>\n    )\n}\n\nexport default PaymentScreen\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/ShippingScreen.js",["345"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/OrderScreen.js",["346","347","348"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n    console.log(\"orders \", order);\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.order._Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.firstName}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.order.paymentMethod}\n                                    </p>\n                                    {order.order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={`http://localhost:4000/${item.image}`} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                   \n\n\n                                    {/* {!order.order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )} */}\n                                     <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                    \n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/UserListScreen.js",["349","350","351"],"import {React as useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users Screen</h1>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n\n                </Col>\n                <Col md={9}>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.firstName}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`} disabled={userInfo._id == user._id ? true : false}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            {/* <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button> */}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                    </Col>\n                    </Row>\n        </div>\n    )\n}\n\nexport default UserListScreen\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/ProductScreen.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Modal } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport ReactImageMagnify from 'react-image-magnify';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport axios from 'axios';\nimport ProductChart from '../components/ProductChart';\n\nconst baseURL = \"http://127.0.0.1:8000/api/products/predict_history_price/\";\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n    const [show, setShow] = useState(false);\n    const [date, setDate] = useState(null)\n    const [predictPrice, setPredict_price] = useState(null);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n   \n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product, price_history, reviews } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    const product_id = product ? product._id : null;\n    var total = product && product.review && product.review.length > 0 ? product.review.reduce((accum,item) => accum + item.rating, 0) : 0;\n    \n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview, reviews])\n\n    const addToCartHandler = () => {\n        console.log(\"product Ids\", match.params.id)\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            \n          \n               \n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    \n                            \n                                            <Image style={{maxHeight: '400px'}} src={`http://localhost:4000/${product.image}`} alt={product.name} fluid rounded />\n                                      \n                                    <Card className=\"p-2 mt-4 border border-white\">\n                                        <div>Description: {ReactHtmlParser(product.description)}</div>\n                                    </Card>\n                                    <diV className=\"mt-5 mb-5\">\n\n                                    </diV>\n                                   \n                                    <diV className=\"mt-5 mb-5\">\n\n                                    </diV>\n                                </Col>\n\n\n                                <Col md={4}>\n                                   \n                                    <ListGroup variant=\"primary\">\n                                    <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={total / product.review ? product.review.length : null} text={`${product.review ? product.review.length : null} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <span className=\"h3\">&#2547;{product.is_offer ? product.price - ((product.price * product.offer_percentage) / 100) : product.price}</span>\n                                            <br></br><span class=\"text-tl\">{product.is_offer ? '৳' + product.price : null}</span> <b>{product.is_offer ? '-' + product.offer_percentage + '%' : <br></br>}</b>\n                                        <br></br>\n\n\n        \n\n                                        </ListGroup.Item>\n\n                                       \n                                    \n\n                                        <ListGroup.Item>\n                                            <p>Name: {product.name}</p>\n                                            <hr></hr>\n                                            <p>Category: {product.category}</p>\n                                            <hr></hr>\n                                           \n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                   \n                                </Col>\n\n                           \n\n\n                                <Col md={2}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>৳ {product.price}</strong>\n                                \n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        \n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    size=\"sm\"\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                  \n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                   \n                                    <Card className=\"p-2 border border-white\">\n                                    <h4>Reviews</h4>\n                                    {reviews &&  reviews.length === 0 && <Message variant='info' size=\"sm\">No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {reviews && reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.user.firstName}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                            size=\"sm\"\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                            size=\"sm\"\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                        size=\"sm\"\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message size=\"sm\" variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                    </Card>\n                                    <Link to='/'  className='btn btn-primary my-3 btn-sm'>Go Back</Link>  \n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/UserEditScreen.js",["371"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Image, Col, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetailsAdmin, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\nimport axios from 'axios'\n\n\n\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [firstName, setFirstName] = React.useState('');\n    const [lastName, setLastName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [profile_pic, setProfile_pic] = React.useState('');\n    const [isAdmin, setIsAdmin] = React.useState(false);\n    const [verified, setVerified] = React.useState(false);\n    const[err, setErr] = useState('');\n    const[message, setMessage] = useState('');\n    const baseURL = \"http://localhost:4000/api/user/DPchangeByAdmin\"\n\n    const dispatch = useDispatch()\n\n    const userDetailsAdmin = useSelector(state => state.userDetailsAdmin)\n    const { error, loading, user } = userDetailsAdmin\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n\n    const handleVerified = (e) =>{\n        if(verified) setVerified(false)\n        else setVerified(true);\n    }\n\n    const handleAdmin = (e) =>{\n        if(isAdmin) setIsAdmin(false);\n        else setIsAdmin(true);\n    }\n\n    const handleFile = async (e) => {\n        const formData = new FormData();\n        const admin = JSON.parse(localStorage.getItem('userInfo'));\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${admin.token}`\n            }\n        }\n        formData.append('profile_pic', e.target.files[0])\n        formData.append('userId', userId);\n        try {\n            await axios.post(baseURL, formData, config).then(res => {\n                setMessage(res.data.message);\n                window.location.reload();\n            })\n        }\n        catch (error) {\n            setErr(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n\n\n    }\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            window.location.reload();\n        } else {\n            if (!user.firstName || user._id !== userId) {\n                dispatch(getUserDetailsAdmin(userId))\n            } else {\n                setFirstName(user.firstName);\n                setLastName(user.lastName);\n                setEmail(user.email)\n                setProfile_pic(user.profile_pic);\n                setVerified(user.verified);\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [dispatch, user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ userId: user._id, firstName, lastName, email, isAdmin, verified }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n\n\n            <h1>Edit User</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                : <>\n                    <Row>\n                        <Col md={4}>\n                        {message && <Message variant='success'>{message}</Message>}\n                        {err && <Message variant='danger'>{err}</Message>}\n                        {error && <Message variant='danger'>{error}</Message>}\n                            <Image src={`http://localhost:4000/${profile_pic}`} width={200}\n                                height={200} rounded />\n                                 <Form.Group controlId='profile pic'>\n                        <Form.Label>profile photo</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='file'\n                            onChange={handleFile}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form onSubmit={submitHandler}>\n\n                                <Form.Group controlId='name'>\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control\n\n                                        type='first name'\n                                        placeholder='Enter last name'\n                                        value={firstName}\n                                        onChange={(e) => setFirstName(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='last name'>\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter last name'\n                                        value={lastName}\n                                        onChange={(e) => setLastName(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='email'>\n                                    <Form.Label>Email Address</Form.Label>\n                                    <Form.Control\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        disabled\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='verified'>\n                                    <Form.Check\n                                        type='checkbox'\n                                        label='Is verified'\n                                        checked={verified}\n                                        onChange={handleVerified}\n                                    >\n                                    </Form.Check>\n                                </Form.Group>\n\n                                <Form.Group controlId='isadmin'>\n                                    <Form.Check\n                                        type='checkbox'\n                                        label='Is Admin'\n                                        checked={isAdmin}\n                                        onChange={handleAdmin}\n                                    >\n                                    </Form.Check>\n                                </Form.Group>\n\n                                <Button type='submit' variant='primary'>\n                                    Update\n                                </Button>\n\n                            </Form>\n                        </Col>\n                    </Row>\n\n                    </>}\n\n\n\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/home/aziz/Desktop/MERN Store/frontend/src/screens/ProductListScreen.js",["372"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    console.log(\"keyword : \", keyword);\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        // if (!userInfo.isAdmin) {\n        //     history.push('/login')\n        // }\n\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products Screen</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3 btn-sm' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col md={9}>\n               \n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>{product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n                     </Col>\n                     </Row>\n        </div>\n    )\n}\n\nexport default ProductListScreen","/home/aziz/Desktop/MERN Store/frontend/src/screens/PlaceOrderScreen.js",["373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { Button, Row, Col, ListGroup, Image, Card, InputGroup, FormControl, Form, ButtonGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const [coupon_code, setCoupon_code] = useState('')\n    const [coupon_code_status, setCoupon_code_status] = useState(0)\n    const [user_id, setUser_id] = useState()\n    const [total_discount, setTotal_discount] = useState(0)\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n    const [count, setCount] = useState(0);\n    const [coinPrice, setCoinPrice] =  useState(0);\n    const [userCoins, setUserCoins] = useState(0);\n    const [leftCoins, setLeftCoins] = useState(0);\n    const [coupon_id, setCoupon_id] = useState(0);\n\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + (item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : item.price) * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.050) * cart.itemsPrice).toFixed(2)\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2) - total_discount - (count * 10);\n\n  \n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        \n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [[success, history]])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n\n                           \n                            \n\n\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h3>Shipping</h3>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            \n                            <h3>Payment Method</h3>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h3>Order Items</h3>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={`http://localhost:4000/${item.image}`} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X &#2547; {item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : item.price} = &#2547; {(item.qty * (item.offer_percentage ? parseFloat(item.price - ((item.price * item.offer_percentage) / 100)).toFixed(2) : item.price)).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4} >\n                    <Card className=\"mb-2 p-2 bg-info\">\n                        \n                    </Card>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h3>Order Summary</h3>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>&#2547; {cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>&#2547; {cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>&#2547; {cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n            \n\n                            \n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>&#2547; {cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                    size=\"sm\"\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/ProductEditScreen.js",["397","398","399","400","401","402","403","404"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Image } from 'react-bootstrap'\nimport { Label, Input, FormText, FormGroup } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n   const [category, setCategory] = useState('');\n    const [catId, setCatId] = useState(null);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState(null);\n    const [tax_percentage, setText_percentage] = useState(null);\n    const [countInStock, setCountInStock] = useState(null);\n    const [image, setImage] = useState(null);\n    const [id, setId] = useState(null);\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product, categories } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n    const handleCategory = (e) =>{\n        setCatId(e.target.value);\n        console.log(e.target.value);\n    }\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n\n            history.push('/admin/productlist')\n        } else {\n            const flag = product && product._id && product._id === productId ? 'yes' : 'no';\n            console.log(typeof product._id, ' ', typeof productId)\n            if (!product.name || flag === 'no') {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name);\n                setDescription(product.description)\n                setPrice(product.price);\n                setText_percentage(product.tax_percentage);\n                setCountInStock(product.countInStock);\n                setId(product._id);\n                setImage(product.image);\n                setCatId(product.category ? product.category._id : null)\n                setCategory(product.category ? product.category.name : null)\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate, categories])\n\n    const submitHandler = (e) => {\n        const data = {\n            id: id,\n            name: name,\n            description: description,\n            price: price,\n            tax_percentage: tax_percentage,\n            countInStock: countInStock,\n            catId: catId\n        }\n        e.preventDefault()\n        dispatch(updateProduct(data, product._id))\n    }\n\n    const uploadFileHandler = async (e) => {\n\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', id)\n\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('http://localhost:4000/api/product/imageUpload', formData, config)\n            setImage(data.image)\n            console.log(\"data \", data);\n\n\n        } catch (error) {\n\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n            <h1>Edit Product</h1>\n            <Row>\n                <Col md={3}>\n                    <Image src={`http://localhost:4000/${image}`} width={200}\n                        height={200} rounded />\n                    <Form.Group controlId='image'>\n                        <Form.File\n                            id='image-file'\n                            label='Choose File'\n                            onChange={uploadFileHandler}\n                        >\n\n                        </Form.File>\n                    </Form.Group>\n                </Col>\n                <Col md={8}>\n                    {loadingUpdate && <Loader />}\n                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                        : (\n\n                            <Form onSubmit={submitHandler}>\n\n\n                                <FormGroup>\n                                <Label for=\"exampleSelect\">Current category : {category}</Label>\n                                <br></br>\n                                    <Label for=\"exampleSelect\">Select A category</Label>\n                                    <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={handleCategory}>\n                                        {\n                                            categories && categories.map((val, ind)=>{\n                                                return(\n                                                    <>\n                                                     <option value={val._id}>{val.name}</option>\n                                                    </>\n                                                )\n                                            })\n                                        }\n                                       \n                                    </Input>\n                                </FormGroup>\n\n                                <Form.Group controlId='name'>\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter name'\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='description'>\n                                    <Form.Label>Description</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter description'\n                                        value={description}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='price'>\n                                    <Form.Label>Price</Form.Label>\n                                    <Form.Control\n\n                                        type='number'\n                                        placeholder='Enter price'\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='countinstock'>\n                                    <Form.Label>Stock</Form.Label>\n                                    <Form.Control\n\n                                        type='number'\n                                        placeholder='Enter stock'\n                                        value={countInStock}\n                                        onChange={(e) => setCountInStock(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='countinstock'>\n                                    <Form.Label>Tax</Form.Label>\n                                    <Form.Control\n\n                                        type='number'\n                                        placeholder='Enter Tax'\n                                        value={tax_percentage}\n                                        onChange={(e) => setText_percentage(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n\n\n                                <Button type='submit' variant='primary'>\n                                    Update\n                                </Button>\n\n                            </Form>\n                        )}\n                </Col>\n\n            </Row>\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","/home/aziz/Desktop/MERN Store/frontend/src/screens/TopReviewProductScreen.js",["405"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductOffer from '../components/ProductOffer'\r\nimport Navs from '../components/Navs'\r\n\r\n\r\nfunction TopReviewProductScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!keyword && <ProductOffer />}\r\n            <br></br>\r\n\r\n            <Navs />\r\n\r\n            <h4 className=\"mt-5\">Latest Laptops</h4>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => product.numReviews > 0 ? (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ) : null )}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopReviewProductScreen;\r\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/PriceRangeScreen.js",["406","407"],"import React, { initialState, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport Loader from '../components/Loader';\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\n\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/api/products/all/\";\r\n\r\nconst PriceRangeScreen = () =>{\r\n    const [value, setValue] = useState(100000);\r\n    const [p, setP] = useState(initialState);\r\n    const [element, setElement] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const rangeSelector = (event, newValue) => {\r\n        setValue(newValue);\r\n        console.log(newValue)\r\n        setLoading(true);\r\n        setElement(10);\r\n        setLoading(false);\r\n        \r\n    };\r\n\r\n    useEffect(async () => {\r\n        try {\r\n    \r\n            axios.get(baseURL).then((response) => {\r\n                setP(response.data)\r\n\r\n            });\r\n           \r\n          \r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n        <div>\r\n            {loading ? <Loader/>:\r\n            <div>\r\n                <h4 classNmae=\"mt-2\">Search Price Range</h4>\r\n                <h1>\r\n        <RangeSlider\r\n           \r\n            max=\"300000\"\r\n            min=\"10000\"\r\n            tooltip=\"on\"\r\n            onChange={rangeSelector}\r\n            size=\"lg\"\r\n        >\r\n            </RangeSlider>\r\n            </h1>\r\n            \r\n        <h3>Price Range (10000 to {value}) TK</h3>\r\n                    <Row>\r\n                        {p && p.map(product => product.price <= value ? (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ) : null)}\r\n                    </Row>\r\n        \r\n        </div>\r\n            }\r\n\r\n\r\n       \r\n    \r\n        </div>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default PriceRangeScreen;","/home/aziz/Desktop/MERN Store/frontend/src/screens/ContactScreen.js",["408","409","410","411"],"import { React, useState} from 'react';\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\nfunction Contact()\r\n{\r\n    const [contact, setContact] = useState(\r\n        {\r\n            f_name: \"\",\r\n            l_name: \"\",\r\n            a_code: \"\",\r\n            tel_p: \"\",\r\n            email: \"\",\r\n            need_contact: \"\",\r\n            c_type: \"\",\r\n            message: \"\",\r\n\r\n        }\r\n    )\r\n    \r\n\r\n    return(\r\n        <div className=\"container\">\r\n                <h1>Contact Screen</h1>\r\n           <Row>\r\n                <Col md={6} className=\"bg-dark p-4 text-white\">\r\n                    <h5 className=\"text-white\">Our Address</h5>\r\n                    <address>\r\n                        121, Zindabazar<br></br>\r\n                        Sylhet, Sylhet<br></br>\r\n                        Bangladesh<br></br>\r\n                        <i class=\"fa fa-phone\"></i>: +852 1234 5678<br></br>\r\n                        <i class=\"fa fa-fax\"></i>: +852 8765 4321<br></br>\r\n                        <i class=\"fa fa-envelope\"></i>:\r\n                        <a href=\"mailto:aaziz9642@gmail.com\" className=\"text-white\">aaziz9642@gmail.com</a>\r\n                    </address>\r\n                    <div class=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" class=\"btn btn-warning\" href=\"tel:+85212345678\"><i class=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" class=\"btn btn-info\"><i class=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" class=\"btn btn-success\" href=\"mailto:aaziz9642@gmail.com\"><i class=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </Col>\r\n                <Col md={5} className=\"bg-dark p-4 ml-5\">\r\n                    <h4 className=\"text-white\"> Location Information</h4>\r\n                </Col>\r\n               \r\n           </Row>\r\n           <hr></hr>\r\n           <Row>\r\n        \r\n                    <Col md={8} className=\"bg-dark p-4 mt-5\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleInputEmail1\" className=\"text-white\">First Name</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter name\" name=\"f_name\" />\r\n                        </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" className=\"text-white\">Last Name</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter name\"  name=\"l_name\"/>\r\n                    </div>\r\n\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\" className=\"text-white\">Area Code</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter area code\" name=\"a_code\"/>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\" className=\"text-white\">Telphone</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter telphone no\" name=\"tel_p\"/>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleInputEmail1\" className=\"text-white\">Email</label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" name=\"email\"/>\r\n                            <small id=\"emailHelp\" class=\"form-text text-muted text-white\">We'll never share your email with anyone else.</small>\r\n                        </div>\r\n\r\n\r\n                        <Row>\r\n\r\n                        <Col md={10}>\r\n                            <div class=\"form-check\">\r\n                                <input type=\"checkbox\" class=\"form-check-input\" name=\"approve\" id=\"approve\" value=\"\" name=\"need_contact\"/>\r\n                                <label class=\"form-check-label\" for=\"approve\">\r\n                                    <strong>May we contact you?</strong>\r\n                                </label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={2} >\r\n\r\n                            <select class=\"form-control\">\r\n                                <option value=\"tel\">Tel.</option>\r\n                                <option value=\"email\">Email</option>\r\n                            </select>\r\n                        </Col>\r\n\r\n\r\n\r\n                        </Row>\r\n                   \r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleFormControlTextarea1\" className=\"text-white\">Message</label>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                        </div>\r\n                   \r\n                  \r\n                       \r\n               </Col>\r\n\r\n           </Row>\r\n           <button className=\"btn btn-warning mt-4\">Submit</button>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","/home/aziz/Desktop/MERN Store/frontend/src/screens/OTPScreen.js",["412"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction OTPScreen({ location, history }) {\r\n\r\n    const [otp, setOtp] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('data_tkn'))\r\n        {\r\n            setEmail(localStorage.getItem('data_tkn'));\r\n        }\r\n        if (userInfo) {\r\n            localStorage.removeItem('data_tkn');\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n            dispatch(register(otp, email))\r\n    }\r\n\r\n    return (\r\n\r\n        <FormContainer>\r\n            <div className=\"card p-3\">\r\n                <h1>Otp</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='otp'>\r\n                        <Form.Label>Otp</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Enter otp'\r\n                            onChange={(e) => setOtp(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary' size=\"sm\">\r\n                        Submit\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        Have an Account? <Link\r\n                            to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                            Sign In\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </FormContainer >\r\n\r\n    )\r\n}\r\n\r\nexport default OTPScreen;\r\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/DashboardScreen.js",["413","414","415","416","417","418","419","420"],"import {React, useState, useEffect} from 'react';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport AdminSideBar from '../admin_components/AdminSideBar';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport Todolist from '../admin_components/Todolist';\r\nimport PieCharts from '../admin_components/PieCharts';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios';\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/api/products/dashboard/\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DashboardScreen = ({history}) =>{\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const [newCustomers, setNewCustomers] = useState(0);\r\n    const [pendingOrders, setPendingOrders] = useState(0);\r\n    const [revenue, setRevenue] = useState(0);\r\n    const [error, setError] = useState(false);\r\n    const [profit, setProfit] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n                history.push('/login')\r\n        }\r\n        else{\r\n            if(!userInfo.isAdmin)\r\n            {\r\n                history.push('/')\r\n            }\r\n            axios.get(baseURL).then(response=>{\r\n                setNewCustomers(response.data.new_users);\r\n                setPendingOrders(response.data.pending_orders);\r\n                setRevenue(response.data.revenue);\r\n                setProfit(response.data.profit);\r\n            })\r\n        }\r\n\r\n    }, [history, userInfo])\r\n\r\n    const data = profit;\r\n    console.log(\"####\",   data);\r\n\r\n\r\n    const renderLineChart = (\r\n        <LineChart width={600} height={300} data={data} margin={{ top: 5, right: 20, bottom: 5, left: 10 }}>\r\n            <Line type=\"monotone\" dataKey=\"profit\" stroke=\"#8884d8\" />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis dataKey=\"year\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"red\" />\r\n            <Line type=\"monotone\" dataKey=\"expenses\" stroke=\"black\" />\r\n            <Tooltip />\r\n        </LineChart>\r\n    );\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h3>Dashboard SCreen</h3>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <AdminSideBar/>\r\n                </Col>\r\n                <Col md={5}>           \r\n                    <Card\r\n                        bg=\"danger\"\r\n                        className=\"mb-2 text-white text-center\"\r\n                    >\r\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-money-check \"></i> Revenue</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>10000019199191 </Card.Title>\r\n    \r\n                        </Card.Body>\r\n                    </Card>     \r\n                    <hr></hr>\r\n                    <div style={{marginBottom: \"100px\"}}>\r\n\r\n                    </div>\r\n                \r\n                    <h3 className=\"text-danger\">Past few years profit graph</h3>\r\n                    <div>{renderLineChart}</div>\r\n                    <div style={{ marginBottom: \"100px\" }}>\r\n\r\n                    </div>\r\n               \r\n\r\n                </Col>\r\n                <Col md={2}>\r\n                    <Card\r\n                        bg=\"info\"\r\n                        className=\"mb-2 text-white text-center\"\r\n                    >\r\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-shopping-cart\"></i> Pending Orders </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>32211 </Card.Title>\r\n                \r\n                        </Card.Body>\r\n                    </Card>\r\n                    <hr></hr>\r\n               \r\n                </Col>\r\n                <Col md={2}>\r\n                    <Card\r\n                        bg=\"dark\"\r\n                        className=\"mb-2 text-white text-center\"\r\n                    >\r\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-users\"></i> New Customers</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>92121921 </Card.Title>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n              \r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardScreen;","/home/aziz/Desktop/MERN Store/frontend/src/screens/OrderListScreen.js",["421"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n     console.log(\"orders \", orders);\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1 >Orders Screen</h1>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm '>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.firstName}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                    </Col>\n                    </Row>\n        </div>\n    )\n}\n\nexport default OrderListScreen","/home/aziz/Desktop/MERN Store/frontend/src/screens/AdminContactScreen.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/SearchBox.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/ProductOffer.js",["422"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image, Card } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listOfferProducts } from '../actions/productActions'\r\n\r\nfunction ProductOffer() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productOfferRated = useSelector(state => state.productOfferRated)\r\n    const { error, loading, products } = productOfferRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listOfferProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (  \r\n               \r\n                <Carousel pause='hover' className='bg-primary mt-4'>\r\n                    {products.map(product => (\r\n                        \r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} real price (${product.price}) <br></br>offering price  ({product.offer_percentage}%) (${(product.price - (product.price * product.offer_percentage) / 100)}) </h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                       \r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductOffer\r\n","/home/aziz/Desktop/MERN Store/frontend/src/components/Message.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/ProductOffer2.js",["423","424","425","426","427","428","429"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport {Container} from 'react-bootstrap';\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\n\r\nfunction ProductOffer2({products}) {\r\n\r\n    \r\n\r\n\r\n    return (<div className=\"bg-primary\">\r\n                <Carousel  autoPlay=\"true\" infiniteLoop=\"true\" useKeyboardArrows=\"true\"  interval=\"1000\" stopOnHover=\"true\" className=\"br\" >\r\n                    \r\n                    {products && products.map(product => (\r\n                        <Link to={`/product/${product._id}`}>\r\n\r\n                        <div >\r\n                            \r\n                            <img src={`http://localhost:4000/${product.image}`} />\r\n                            <p className=\"legend\"> <h6 className=\"text-white\">{product.name} real price (${product.price}) <br></br>offering price  ({product.offer_percentage}%) (${(product.price - (product.price * product.offer_percentage) / 100)}) </h6> </p>\r\n                        \r\n                        </div>\r\n                        </Link>\r\n\r\n                    ))}\r\n                   \r\n        \r\n                </Carousel>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductOffer2\r\n","/home/aziz/Desktop/MERN Store/frontend/src/components/Navs.js",["430","431","432","433"],"import React from 'react'\r\nimport {Nav, Link} from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Navs() {\r\n     \r\n    const history = useHistory();\r\n\r\n    const handleSelect = (eventKey) => {\r\n        if(eventKey == \"pricePredict\")\r\n        {\r\n            history.push(\"/pricePredict\");\r\n        }\r\n        if (eventKey == \"priceRange\")\r\n        {\r\n            history.push(\"/priceRange\");\r\n        }\r\n        if (eventKey == \"contact\") {\r\n            history.push(\"/contact\");\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n\r\n\r\n            <Nav className=\"justify-content-center \" activeKey=\"/home\" >\r\n                <Nav.Item >\r\n                    <Nav.Link  eventKey=\"priceRange\" onSelect={handleSelect} style={{ fontSize: \"17px\" }}><i class=\"fas fa-male\"></i> MALE</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link  eventKey=\"pricePredict\" onSelect={handleSelect} style={{ fontSize: \"17px\" }}><i class=\"fas fa-female\"></i> FEMALE</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link  eventKey=\"contact\" onSelect={handleSelect} style={{ fontSize: \"17px\" }}><b><i class=\"fas fa-baby\"></i> KIDS</b></Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <p className=\"text-center mt-4 mb-4\">A laptop Store</p>\r\n            <hr></hr>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Navs\r\n","/home/aziz/Desktop/MERN Store/frontend/src/components/Product.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/Navs2.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/Loader.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/Paginate.js",["434"],"\nimport * as React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Pagination from '@mui/material/Pagination';\nexport default function Paginate({ pages, page, keyword = '', isAdmin = '' }) {\n    const history = useHistory();\n\n    const [cur, setCur] = React.useState(null);\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n    const handleChange = (event, value) => {\n        if (isAdmin) {\n            history.push(`/blogsListScreen/?keyword=${keyword}&page=${value}`);\n        }\n        else {\n            history.push(`/?keyword=${keyword}&page=${value}`);\n        }\n        setCur(value);\n    }\n    return (\n        <>\n            {\n                pages ? <Pagination count={parseInt(pages)} page={parseInt(page)} color=\"secondary\" onChange={handleChange} /> : null\n            }\n        </>\n    );\n}\n","/home/aziz/Desktop/MERN Store/frontend/src/components/SearchRam.js",["435","436"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Row, Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchRAM() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect(()  => {\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } \r\n     \r\n    }, [keyword]);\r\n\r\n    const handleChange = (event) => {\r\n        setKeyword(event.target.value + 'RAM')\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n\r\n        <Form.Group as={Row} className=\"mb-3\">\r\n            <h5>RAM</h5>\r\n\r\n            <Col sm={10} >\r\n\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Check\r\n                        required\r\n                        name=\"terms\"\r\n                        label=\"8 GB\"\r\n                        id=\"validationFormik0\"\r\n                        value=\"8\"\r\n                        defaultChecked= {keyword == null ? true : false}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Check\r\n                        required\r\n                        name=\"terms\"\r\n                        label=\"12 GB\"\r\n                        id=\"validationFormik0\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Check\r\n                        required\r\n                        name=\"terms\"\r\n                        label=\"16 GB\"\r\n                        id=\"validationFormik0\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 \">\r\n                    <Form.Check\r\n                        required\r\n                        name=\"terms\"\r\n                        label=\"32 GB\"\r\n                        id=\"validationFormik1\"\r\n                    />\r\n                </Form.Group>\r\n\r\n            </Col>\r\n        </Form.Group>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SearchRAM;\r\n","/home/aziz/Desktop/MERN Store/frontend/src/components/SearchSlider.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/ProductCarousel.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/FormContainer.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/Rating.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/ProductCompareChart.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/constants/orderConstants.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/constants/userConstants.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/constants/cartConstants.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/constants/productConstants.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/constants/contactConstants.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/actions/productActions.js",["437"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n    PRODUCT_OFFER_REQUEST,\n    PRODUCT_OFFER_SUCCESS,\n    PRODUCT_OFFER_FAIL,\n\n    PRODUCT_COUPON_REQUEST,\n    PRODUCT_COUPON_SUCCESS,\n    PRODUCT_COUPON_FAIL\n\n} from '../constants/productConstants'\n\nexport const listCoupons = () => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_COUPON_REQUEST})\n\n        const { data } = await axios.get(`/api/products/coupons/`)\n\n        dispatch(\n            {\n                type: PRODUCT_COUPON_SUCCESS,\n                payload: data\n\n            }\n        )\n    }\n    catch(error)\n    {\n        dispatch({\n            type: PRODUCT_COUPON_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n\n    }\n}\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listOfferProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_OFFER_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product/offerProduct`)\n\n        dispatch({\n            type: PRODUCT_OFFER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_OFFER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product/getProduct/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ? userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `http://localhost:4000/api/product/deleteProduct/${id}`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ? userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/product/createProduct`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product, id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ?  userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `http://localhost:4000/api/product/updateProduct/${id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/product/${productId}/createReview`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/aziz/Desktop/MERN Store/frontend/src/actions/orderActions.js",["438","439","440"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/order/createOrder`,\n            order,\n            config\n        )\n        console.log(\"data is he\", data);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/orderDetails/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/myOrders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/allOrders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/aziz/Desktop/MERN Store/frontend/src/actions/userActions.js",["441"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_DETAILS_REQUEST_ADMIN,\n    USER_DETAILS_SUCCESS_ADMIN,\n    USER_DETAILS_FAIL_ADMIN,\n\n    \n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'http://localhost:4000/api/user/signIn',\n            { 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        const tkn = data.userInfo;\n        localStorage.setItem('userInfo', JSON.stringify(tkn))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\n\n\nexport const register = (otp, email) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'otp': otp, 'email': email },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user/userProfile/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetailsAdmin = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST_ADMIN\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user/userDetails/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS_ADMIN,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL_ADMIN,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/user/updateUser`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        const tkn = data.userInfo;\n        localStorage.setItem('userInfo', JSON.stringify(tkn))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/user/updateUserByAdmin`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/aziz/Desktop/MERN Store/frontend/src/admin_components/Todolist.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/admin_components/PieCharts.js",["442"],"import React from 'react';\r\nimport { ResponsiveContainer, PieChart, Pie } from 'recharts';\r\n\r\n\r\nconst PieCharts = () => {\r\n\r\n    // Sample data\r\n    const data = [\r\n        { name: 'Geeksforgeeks', students: 400 },\r\n        { name: 'Technical scripter', students: 700 },\r\n        { name: 'Geek-i-knack', students: 200 },\r\n        { name: 'Geek-o-mania', students: 1000 }\r\n    ];\r\n\r\n\r\n    return (\r\n        <PieChart width={700} height={700}>\r\n            <Pie data={data} dataKey=\"students\" outerRadius={250} fill=\"green\" />\r\n        </PieChart>\r\n\r\n    );\r\n}\r\n\r\nexport default PieCharts;","/home/aziz/Desktop/MERN Store/frontend/src/admin_components/AdminSideBar.js",["443","444"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Nav, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\n\r\nconst SideBar = (history) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Nav className=\"col-md-12 d-none d-md-block bg-dark sidebar p-3 \">\r\n                <div className=\"sidebar-sticky \"></div>\r\n                <Nav.Item>\r\n                    \r\n                    <NavLink\r\n                        className=\"navbar-item h5 font-weight-bold ml-3 mt-2 text-white\"\r\n                        activeClassName=\"is-active\"\r\n                        to=\"/dashboard\"\r\n                        exact\r\n                    >\r\n                        <i class=\"fas fa-tachometer-alt\"></i> Dashboard\r\n                    </NavLink>\r\n                </Nav.Item>\r\n                <hr></hr>\r\n                <Nav.Item>\r\n       \r\n                    <NavLink\r\n                        className=\"navbar-item h5 font-weight-bold ml-3 mt-2 text-white\"\r\n                        activeClassName=\"is-active\"\r\n                        to=\"/admin/userlist\"\r\n                        exact\r\n                    >\r\n                        <i class=\"fas fa-users\"></i> Users\r\n                    </NavLink>\r\n                </Nav.Item>\r\n                <hr></hr>\r\n                <Nav.Item>\r\n                    <NavLink\r\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\r\n                        activeClassName=\"is-active\"\r\n                        to=\"/category\"\r\n                        exact\r\n                    >\r\n                        <i class=\"fab fa-bandcamp\"></i> Category\r\n                    </NavLink>\r\n                </Nav.Item>\r\n                <hr></hr>\r\n                <Nav.Item>\r\n                    <NavLink\r\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\r\n                        activeClassName=\"is-active\"\r\n                        to=\"/admin/productlist\"\r\n                        exact\r\n                    >\r\n                        <i class=\"fab fa-product-hunt\"></i> Products\r\n                    </NavLink>\r\n                </Nav.Item>\r\n\r\n                <hr></hr>\r\n                <Nav.Item>\r\n                    <NavLink\r\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\r\n                        activeClassName=\"is-active\"\r\n                        to=\"/admin/orderlist\"\r\n                        exact\r\n                    >\r\n                        <i class=\"fab fa-first-order\"></i> Orders\r\n                    </NavLink>\r\n                </Nav.Item>\r\n                <hr></hr>\r\n                {/* <Nav.Item>\r\n                    <NavLink\r\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\r\n                        activeClassName=\"is-active\"\r\n                        to=\"/admin/contact\"\r\n                        exact\r\n                    >\r\n                        <i class=\"fas fa-file-signature\"></i> Contacts\r\n                    </NavLink>\r\n                </Nav.Item> */}\r\n                <hr></hr>\r\n                <Nav.Item>\r\n                    <Link\r\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\r\n                        activeClassName=\"is-active\"\r\n                        onClick={logoutHandler}\r\n                        to=\"/\"\r\n                        \r\n                    >\r\n                        <i class=\"fas fa-sign-out-alt\"></i> Logout\r\n                    </Link>\r\n                </Nav.Item>\r\n                \r\n                <div style={{marginBottom: \"1200px\"}}>\r\n\r\n                </div>\r\n            </Nav>\r\n\r\n        </>\r\n    );\r\n};\r\nconst AdminSideBar = withRouter(SideBar);\r\nexport default AdminSideBar;","/home/aziz/Desktop/MERN Store/frontend/src/components/CheckoutSteps.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/ProductChart.js",["445","446"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Legend, Tooltip} from 'recharts';\r\n\r\n// const pdata = [\r\n//     {\r\n//         name: 'Python',\r\n//         student: 13,\r\n//         fees: 10\r\n//     },\r\n//     {\r\n//         name: 'Java',\r\n//         student: 10,\r\n//         fees: 11\r\n//     },\r\n//     {\r\n//         name: 'Php',\r\n//         student: 20,\r\n//         fees: 12\r\n//     },\r\n//     {\r\n//         name: 'Java Script',\r\n//         student: 80,\r\n//         fees: 20\r\n//     },\r\n//     {\r\n//         name: 'Web',\r\n//         student: 100,\r\n//         fees: 80\r\n//     },\r\n//     {\r\n//         name: 'C++',\r\n//         student: 40,\r\n//         fees: 20\r\n//     }\r\n\r\n// ]\r\n\r\nconst ProductChart = (props) =>{\r\n\r\n    const pdata = props.price_history;\r\n   // console.log(\"####################\", props.product_id, props.price_history);\r\n\r\n\r\n    return(\r\n        <div className=\"mt-5 mb-5\">\r\n            <h4 className=\"mb-3 text-danger\">Latest Prices graph</h4>\r\n            <div className=\"mt-4\">\r\n            <ResponsiveContainer width=\"100%\" aspect={3}>\r\n                <LineChart data={pdata} width={500} height={300} margin={{top:5, right: 30, left:20, bottom: 5}}>\r\n                    <CartesianGrid/>\r\n                        <XAxis dataKey=\"createdAt\" interval={'preserveStartEnd'}/>\r\n                    <YAxis/>\r\n                    <Tooltip/>\r\n                        <Legend/>\r\n                    <Line dataKey=\"price\" stroke='red' activeDot={{r: 8}}/>\r\n                </LineChart>\r\n\r\n            </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductChart;","/home/aziz/Desktop/MERN Store/frontend/src/actions/cartActions.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/components/SearchBrand.js",["447","448"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Row, Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBrand() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        }\r\n\r\n    }, [keyword]);\r\n\r\n    const handleChange = (event) => {\r\n        setKeyword(event.target.value + 'RAM')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Form.Group as={Row} className=\"mb-3\">\r\n            <h5>Brand</h5>\r\n\r\n            <Col sm={10} >\r\n\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Check\r\n                        required\r\n                        name=\"terms\"\r\n                        label=\"Apple\"\r\n                        id=\"validationFormik0\"\r\n                        value=\"8\"\r\n                        defaultChecked={keyword == null ? true : false}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Check\r\n                        required\r\n                        name=\"terms\"\r\n                        label=\"Asus\"\r\n                        id=\"validationFormik0\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Check\r\n                        required\r\n                        name=\"terms\"\r\n                        label=\"Hp\"\r\n                        id=\"validationFormik0\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 \">\r\n                    <Form.Check\r\n                        required\r\n                        name=\"terms\"\r\n                        label=\"Lenovo\"\r\n                        id=\"validationFormik1\"\r\n                    />\r\n                </Form.Group>\r\n\r\n            </Col>\r\n        </Form.Group>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBrand;\r\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/RegisterScreen2.js",["449","450","451","452","453","454","455","456"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { register } from '../../actions/userActions'\r\nimport axios from 'axios'\r\n\r\nconst baseURL = \"http://localhost:4000/api/user/signUp\";\r\n\r\nfunction RegisterScreen2({ location, history }) {\r\n\r\n    const [firstName, setFirst_name] = useState('')\r\n    const [lastName, setLast_name] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const [profile_pic, setProfile_pic] = useState('');\r\n    const [message, setMessage] = useState('')\r\n    const [isOk, setIsOk] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoadding] = useState(false)\r\n    const [success, setSuccess] = useState(false);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (success) {\r\n    //         history.push('/otp_screen');\r\n    //     }\r\n    // }, [success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != password2) {\r\n            setError('Passwords do not match')\r\n        } else {\r\n            //dispatch(register(name, email, password, mobile))\r\n            const formData = new FormData();\r\n            formData.append('firstName', firstName);\r\n            formData.append('lastName', lastName)\r\n            formData.append('email', email)\r\n            formData.append('password', password);\r\n            formData.append('password2', password2);\r\n            formData.append('profile_pic', profile_pic);\r\n\r\n            setLoadding(true)\r\n    \r\n                axios.post(baseURL, formData).then((response) => {\r\n                    setMessage(response.data.message);\r\n                    setSuccess(true);  \r\n                }).catch(error =>{\r\n                    setError(error.response && error.response.data.detail\r\n                        ? error.response.data.detail\r\n                        : \"network error\");\r\n                })\r\n            setLoadding(false)\r\n            \r\n        }\r\n       \r\n\r\n    }\r\n\r\n    const handleFile = (e) =>{\r\n        setProfile_pic(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n\r\n        <FormContainer>\r\n            <div className=\"card p-4\">\r\n                <h1>Register</h1>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                {message &&  <Message variant='success'>{message}</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='f name'>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            size=\"sm\"\r\n                            type='name'\r\n                            placeholder='Enter first name'\r\n                            value={firstName}\r\n                            onChange={(e) => setFirst_name(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='l name'>\r\n                        <Form.Label>last Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            size=\"sm\"\r\n                            type='name'\r\n                            placeholder='Enter last name'\r\n                            value={lastName}\r\n                            onChange={(e) => setLast_name(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            size=\"sm\"\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            size=\"sm\"\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            size=\"sm\"\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={password2}\r\n                            onChange={(e) => setPassword2(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='profile pic'>\r\n                        <Form.Label>profile photo</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            size=\"sm\"\r\n                            type='file'\r\n                            onChange={handleFile}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button size=\"sm\" type='submit' variant='primary' className=\"btn-block mt-4\">\r\n                        Register\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        Have an Account? <Link\r\n                            to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                            Sign In\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </FormContainer >\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterScreen2;\r\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/EmailVerifyScreen.js",["457","458","459","460","461","462"],"import { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nconst EmailVerifyScreen = ({match, history}) =>{\n    const id = match.params.id;\n    const token = match.params.token;\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [userInfo, setUserInfo] = useState(null);\n    const[loading, setLoading] = useState(false);\n    const baseURL = `http://localhost:4000/api/user/SignUp_verification/${id}/${token}`;\n\n\n    if(userInfo)\n    {\n        localStorage.setItem('userInfo', JSON.stringify(userInfo));\n        history.push('/')\n    }\n\n    useEffect(async () => {\n        try {\n            await axios.get(baseURL).then(res => {\n                setUserInfo(res.data.userInfo)\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }, [id, token, userInfo])\n\n\n\n    return(\n        <>\n        <p>{id} {token}</p>\n        {error ? <p>Error</p> : null}\n        <h1>This is email</h1>\n        </>\n    )\n}\nexport default EmailVerifyScreen;;\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/LoginScreen.js",["463"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport FormContainer from '../../components/FormContainer'\nimport { login } from '../../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n\n        <Row >\n            <Col md={3}>\n            </Col>\n            <Col>\n                <div className=\"card\">\n                <FormContainer >\n                    <h1>Sign In</h1>\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                size=\"sm\"\n                                type='email'\n                                placeholder='Enter Email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                size=\"sm\"\n                                type='password'\n                                placeholder='Enter Password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button size=\"sm\" type='submit' variant='primary' className=\"btn-block\">\n                            Sign In\n                        </Button>\n                    </Form>\n\n                    <Row className='py-3'>\n                        <Col>\n                            New Customer? <Link\n                                to={redirect ? `/register2?redirect=${redirect}` : '/register2'}>\n                                Register\n                            </Link>\n                            \n                        </Col>\n                        <Col>\n                            Recover your account <Link\n                                to={redirect ? `/reset_password?redirect=${redirect}` : '/reset_password'}>\n                                reset password\n                            </Link>\n\n                        </Col>\n                    </Row>\n\n                </FormContainer>\n                </div>\n\n            </Col>\n            <Col md={3}>\n            </Col>\n        </Row>\n        \n      \n    )\n}\n\nexport default LoginScreen\n","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/ProfileScreen.js",["464","465","466","467","468"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table, Container, Image } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants'\nimport { listMyOrders } from '../../actions/orderActions'\nimport axios from 'axios'\n\nconst baseURL = \"http://localhost:4000/api/user/DPchange\";\n\nfunction ProfileScreen({ history }) {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [profile_pic, setProfile_pic] = useState('');\n    const [err, setErr] = useState('');\n\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success, wrong, msg } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    const handleFile = (e) => {\n\n        const formData = new FormData();\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        formData.append('profile_pic', e.target.files[0])\n        axios.post(baseURL, formData, config).then((res) => {\n            const data = res.data.file_name;\n            // Get the existing data\n            var existing = localStorage.getItem('userInfo');\n\n            // If no existing data, create an array\n            // Otherwise, convert the localStorage string to an array\n            existing = existing ? JSON.parse(existing) : {};\n            // Add new data to localStorage Array\n            existing['profile_pic'] = data;\n            // Save back to localStorage\n            localStorage.setItem('userInfo', JSON.stringify(existing));\n            setProfile_pic(data);\n            window.location.reload();\n        }).catch(error => {\n            setErr(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        })\n\n    }\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n\n            if (!user || !user.firstName || success || userInfo._id !== user._id) {\n\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n\n            } else {\n\n                setFirstName(user.firstName);\n                setLastName(user.lastName);\n                setEmail(user.email);\n                setProfile_pic(user.profile_pic);\n            }\n        }\n\n    }, [dispatch, history, user, userInfo, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (!password) {\n            setMessage('did not give password')\n        } else {\n            dispatch(updateUserProfile({\n                'firstName': firstName,\n                'lastName': lastName,\n                'email': email,\n                'password': password,\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <div>\n            <Row>\n                <Col md={2}>\n\n                    <Image src={`http://localhost:4000/${profile_pic}`} width={140}\n                        height={140} rounded />\n\n                    <Form.Group controlId='profile pic'>\n                        <Form.Label>profile photo</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='file'\n                            onChange={handleFile}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col md={3}>\n                    <h2 >User Profile</h2>\n\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {msg && <Message variant='success'>{msg}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {wrong && <Message variant='danger'>{wrong}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                required\n                                type='name'\n                                placeholder='Enter name'\n                                value={firstName}\n                                onChange={(e) => setFirstName(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                required\n                                type='name'\n                                placeholder='Enter name'\n                                value={lastName}\n                                onChange={(e) => setLastName(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                required\n                                type='email'\n                                placeholder='Enter Email'\n                                value={email}\n                                disabled\n                                onChange={(e) => setEmail(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <span>You cant change password here. this field is just required for updating others field</span>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n\n                                type='password'\n                                placeholder='Enter Password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n\n\n                        <Button type='submit' variant='primary' size=\"sm\">\n                            Update\n                        </Button>\n\n                    </Form>\n                </Col>\n\n                <Col md={7}>\n                    <h2 >My Recent Orders</h2>\n                    {loadingOrders ? (\n                        <Loader />\n                    ) : errorOrders ? (\n                        <Message variant='danger'>{errorOrders}</Message>\n                    ) : (\n                        <Table striped responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Date</th>\n                                    <th>Total</th>\n                                    <th>Paid</th>\n                                    <th>Delivered</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                        )}</td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button className='btn-sm'>Details</Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default ProfileScreen","/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/ResetPassword.js",[],"/home/aziz/Desktop/MERN Store/frontend/src/screens/auth/ConfirmPassword.js",["469","470","471"],"import axios from 'axios';\nimport { React, useState, useEffect } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Message from '../../components/Message';\n\n\n\nconst ConfirmPassword = ({ match, history }) => {\n\n    const id = match.params.id;\n    const token = match.params.token;\n    const baseURL = `http://localhost:4000/api/user/resetPassword_verification/${id}/${token}`;\n    const baseURL2 = `http://localhost:4000/api/user/updatePassword/${id}/${token}`;\n    const [password, setPassword] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [userInfo, setUser_info] = useState('');\n    const [isValid, setIsValid] = useState(false);\n    const [error, setError] = useState('');\n\n\n    if (userInfo) {\n        localStorage.setItem('userInfo', JSON.stringify(userInfo));\n        history.push('/')\n        window.location.reload();\n    }\n\n    const passwordHandle = async (e) => {\n        e.preventDefault()\n        try {\n            const data = {\n                password: password,\n                password2: password2,\n            }\n            await axios.put(baseURL2, data).then(res => {\n                setUser_info(res.data.userInfo)\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }\n\n\n\n    useEffect(async () => {\n        try {\n            await axios.get(baseURL).then(res => {\n                setIsValid(true);\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }, [id, token, userInfo])\n\n    return (\n        <div>\n\n            {\n                isValid == true ?\n                    <>\n                        <Row>\n                            <Col sm={4}>\n                            </Col>\n                            <Col sm={4}>\n                                <h5>Confirm your new password</h5>\n                                {error && <Message variant='danger'>{error}</Message>}\n                                <form onSubmit={passwordHandle}>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type='password'\n                                    placeholder='Enter password'\n                                    onChange={(e) => setPassword(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type='password'\n                                    placeholder='Enter confirm password'\n                                    onChange={(e) => setPassword2(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Button type=\"submit\" size=\"sm\" className=\"btn-block\">Submit</Button>\n                                </form>\n\n                            </Col>\n                            <Col sm={4}>\n                            </Col>\n                        </Row>\n                    </>\n\n                    :\n                    <>\n                     {error && <Message variant='danger'>{error}</Message>}\n                    </>\n            }\n\n\n        </div>\n    )\n}\n\nexport default ConfirmPassword;","/home/aziz/Desktop/MERN Store/frontend/src/screens/CategoryScreen.js",["472","473","474","475","476","477"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Table, Button, InputGroup, FormControl, Form, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport AdminSideBar from '../admin_components/AdminSideBar';\r\nimport Message from '../components/Message';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\n\r\n\r\nconst baseURLCreate = 'http://localhost:4000/api/category/createCategory';\r\nconst baseURLgetAllCategories = 'http://localhost:4000/api/category/getAllCategories';\r\n\r\nconst CategoryScreen = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [error, setError] = useState();\r\n    const [success, setSuccess] = useState('');\r\n    const [categories, setCategories] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [catId, setCatId] = useState(null);\r\n    const [loading, setLoadding] = useState(false);\r\n    const admin = JSON.parse(localStorage.getItem('userInfo'));\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Authorization: `Bearer ${admin.token}`\r\n        }\r\n    }\r\n\r\n    const handleCreate = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('description', description);\r\n        formData.append('image', image);\r\n\r\n\r\n        try {\r\n\r\n            await axios.post(baseURLCreate, formData, config).then(res => {\r\n                setCategories(res.data.categories);\r\n                setSuccess(res.data.message);\r\n                setError('');\r\n            })\r\n\r\n        }\r\n        catch (error) {\r\n\r\n            setSuccess('');\r\n            setError(error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : \"network error\");\r\n        }\r\n\r\n    }\r\n\r\n    const handlegetCategory = async (e, id) => {\r\n        e.preventDefault();\r\n        const baseURLgetCat = `http://localhost:4000/api/category/getCategory/${id}`;\r\n        try {\r\n            await axios.get(baseURLgetCat, config).then(res => {\r\n                setCategory(res.data.category);\r\n                setError('');\r\n                setSuccess(res.data.message);\r\n            })\r\n        }\r\n        catch (error) {\r\n            setSuccess('');\r\n            setError(error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : \"network error\");\r\n        }\r\n    }\r\n\r\n    const handleDelete = async (e, id) => {\r\n        e.preventDefault();\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            const baseURLdelete = `http://localhost:4000/api/category/deleteCategory/${id}`;\r\n            try {\r\n                await axios.delete(baseURLdelete, config).then(res => {\r\n                    setCategories(res.data.categories);\r\n                    setError('');\r\n                    setSuccess(res.data.message);\r\n                })\r\n            }\r\n            catch (error) {\r\n                setSuccess('');\r\n                setError(error.response && error.response.data.detail\r\n                    ? error.response.data.detail\r\n                    : \"network error\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault();\r\n        const baseURLgetCat = `http://localhost:4000/api/category/updateCategory/${catId}`;\r\n        console.log(catId)\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('description', description);\r\n        formData.append('image', image);\r\n        if (!name || !description) {\r\n            alert(\"All fields must be filled\");\r\n            return;\r\n        }\r\n        try {\r\n            await axios.put(baseURLgetCat, formData, config).then(res => {\r\n                setCategory(res.data.updateCategory);\r\n                setError('');\r\n                setSuccess(res.data.message);\r\n            })\r\n        }\r\n        catch (error) {\r\n            setSuccess('');\r\n            setError(error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : \"network error\");\r\n        }\r\n\r\n    }\r\n    console.log(\"categories\", categories)\r\n    useEffect(() => {\r\n        try {\r\n            axios.get(baseURLgetAllCategories, config).then(res => {\r\n                setCategories(res.data.categories);\r\n                setError('');\r\n                // setSuccess(res.data.message);\r\n            })\r\n        }\r\n        catch (error) {\r\n            setSuccess('');\r\n            setError(error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : \"network error\");\r\n        }\r\n        if (category) {\r\n            setName(category.name);\r\n            setDescription(category.description);\r\n            setImage(category.image);\r\n            setIsUpdate(true);\r\n            setCatId(category._id);\r\n        }\r\n\r\n    }, [category])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Category screen</h3>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <AdminSideBar />\r\n                </Col>\r\n                <Col>\r\n                    {success && <Message variant='success'>{success}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {loading && <Loader />}\r\n                    <form onSubmit={isUpdate == false ? handleCreate : handleUpdate}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter  name'\r\n                                value={name}\r\n                                onChange={(e) => { setName(e.target.value) }}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='text'\r\n                                placeholder='Enter des'\r\n                                value={description}\r\n                                onChange={(e) => { setDescription(e.target.value) }}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='imgage'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type='file'\r\n                                onChange={(e) => { setImage(e.target.files[0]) }}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {\r\n                            isUpdate == false ?\r\n                                <>\r\n                                    <Button type=\"submit\" variant=\"info\" id=\"button-addon2\" size=\"sm\">\r\n                                        Add\r\n                                    </Button>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <Button type=\"submit\" variant=\"info\" id=\"button-addon2\" size=\"sm\">\r\n                                        Update\r\n                                    </Button>\r\n                                </>\r\n                        }\r\n                    </form>\r\n\r\n                    <hr></hr>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>image</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {\r\n\r\n                                categories && categories.map((val, ind) => {\r\n                                    return (<>\r\n                                        <tr>\r\n                                            <td>{ind}</td>\r\n                                            <td>{val.name}</td>\r\n                                            <td>  <Image src={`http://localhost:4000/${val.image}`} width={40}\r\n                                                height={40} rounded /></td>\r\n                                            <td><Button onClick={(e) => { handlegetCategory(e, val._id) }} size=\"sm\" className=\"btn btn-warning\"><i class=\"fas fa-edit\"></i>\r\n                                            </Button> <Button onClick={(e) => { handleDelete(e, val._id) }} className=\"btn btn-danger\" size=\"sm\"><i class=\"fas fa-trash\"></i></Button></td>\r\n\r\n                                        </tr>\r\n                                    </>)\r\n                                })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryScreen;","/home/aziz/Desktop/MERN Store/frontend/src/components/Category.js",["478"],"import React from 'react'\nimport { Card, Row, Col } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nconst Category = ({ categories }) => {\n    console.log(\"cat \", categories)\n    return (\n        <>  <h5 className=\"mt-4 mb-4 text-center\">categories</h5>\n        <Row className='p-0 bg-secondary  p-2 bg-white'>\n            {\n                categories && categories.map((val, ind) => {\n                    return (\n                        <>\n                            <Col md={2} className='p-0 m-0 cardd'>\n\n                                <div className=\"card text-center\">\n\n                                    <Link to={`/product/${val._id}`}>\n                                        <Card.Img src={`http://localhost:4000/${val.image}`} style={{maxHeight: '80px', maxWidth: '80px', minHeight: '80px', minWidth: '80px'}} className=\"mt-1\"/>\n                                    </Link>\n\n                                    <Card.Body >\n                                        <Link to={`/product/${val._id}`} >\n                                            <Card.Title as=\"div\" >\n                                                <strong >{val.name}</strong>\n                                            </Card.Title>\n                                        </Link>\n\n                                    </Card.Body>\n                                </div>\n\n                            </Col>\n                        </>\n                    )\n                })\n            }\n        </Row>\n        </>\n    )\n}\nexport default Category;",{"ruleId":"479","replacedBy":"480"},{"ruleId":"481","replacedBy":"482"},{"ruleId":"483","severity":1,"message":"484","line":2,"column":39,"nodeType":"485","messageId":"486","endLine":2,"endColumn":45},{"ruleId":"483","severity":1,"message":"487","line":2,"column":5,"nodeType":"485","messageId":"486","endLine":2,"endColumn":25},{"ruleId":"483","severity":1,"message":"488","line":3,"column":5,"nodeType":"485","messageId":"486","endLine":3,"endColumn":25},{"ruleId":"483","severity":1,"message":"489","line":4,"column":5,"nodeType":"485","messageId":"486","endLine":4,"endColumn":22},{"ruleId":"479","replacedBy":"490"},{"ruleId":"481","replacedBy":"491"},{"ruleId":"483","severity":1,"message":"492","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":19},{"ruleId":"483","severity":1,"message":"493","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":26},{"ruleId":"483","severity":1,"message":"494","line":1,"column":28,"nodeType":"485","messageId":"486","endLine":1,"endColumn":36},{"ruleId":"483","severity":1,"message":"495","line":3,"column":34,"nodeType":"485","messageId":"486","endLine":3,"endColumn":37},{"ruleId":"483","severity":1,"message":"494","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"483","severity":1,"message":"492","line":3,"column":20,"nodeType":"485","messageId":"486","endLine":3,"endColumn":29},{"ruleId":"483","severity":1,"message":"496","line":3,"column":31,"nodeType":"485","messageId":"486","endLine":3,"endColumn":35},{"ruleId":"483","severity":1,"message":"497","line":3,"column":37,"nodeType":"485","messageId":"486","endLine":3,"endColumn":46},{"ruleId":"483","severity":1,"message":"498","line":10,"column":8,"nodeType":"485","messageId":"486","endLine":10,"endColumn":12},{"ruleId":"483","severity":1,"message":"499","line":11,"column":8,"nodeType":"485","messageId":"486","endLine":11,"endColumn":13},{"ruleId":"483","severity":1,"message":"500","line":17,"column":12,"nodeType":"485","messageId":"486","endLine":17,"endColumn":17},{"ruleId":"483","severity":1,"message":"501","line":17,"column":19,"nodeType":"485","messageId":"486","endLine":17,"endColumn":27},{"ruleId":"502","severity":1,"message":"503","line":36,"column":22,"nodeType":"504","messageId":"505","endLine":36,"endColumn":24},{"ruleId":"483","severity":1,"message":"492","line":4,"column":58,"nodeType":"485","messageId":"486","endLine":4,"endColumn":67},{"ruleId":"483","severity":1,"message":"493","line":1,"column":27,"nodeType":"485","messageId":"486","endLine":1,"endColumn":36},{"ruleId":"483","severity":1,"message":"492","line":2,"column":29,"nodeType":"485","messageId":"486","endLine":2,"endColumn":38},{"ruleId":"483","severity":1,"message":"493","line":1,"column":27,"nodeType":"485","messageId":"486","endLine":1,"endColumn":36},{"ruleId":"483","severity":1,"message":"506","line":16,"column":12,"nodeType":"485","messageId":"486","endLine":16,"endColumn":20},{"ruleId":"483","severity":1,"message":"507","line":22,"column":22,"nodeType":"485","messageId":"486","endLine":22,"endColumn":32},{"ruleId":"508","severity":1,"message":"509","line":65,"column":8,"nodeType":"510","endLine":65,"endColumn":55,"suggestions":"511"},{"ruleId":"483","severity":1,"message":"494","line":1,"column":18,"nodeType":"485","messageId":"486","endLine":1,"endColumn":26},{"ruleId":"483","severity":1,"message":"512","line":34,"column":11,"nodeType":"485","messageId":"486","endLine":34,"endColumn":24},{"ruleId":"502","severity":1,"message":"513","line":79,"column":119,"nodeType":"504","messageId":"505","endLine":79,"endColumn":121},{"ruleId":"483","severity":1,"message":"514","line":5,"column":10,"nodeType":"485","messageId":"486","endLine":5,"endColumn":18},{"ruleId":"483","severity":1,"message":"515","line":6,"column":58,"nodeType":"485","messageId":"486","endLine":6,"endColumn":63},{"ruleId":"483","severity":1,"message":"516","line":12,"column":8,"nodeType":"485","messageId":"486","endLine":12,"endColumn":25},{"ruleId":"483","severity":1,"message":"517","line":13,"column":27,"nodeType":"485","messageId":"486","endLine":13,"endColumn":39},{"ruleId":"483","severity":1,"message":"518","line":13,"column":41,"nodeType":"485","messageId":"486","endLine":13,"endColumn":61},{"ruleId":"483","severity":1,"message":"519","line":13,"column":63,"nodeType":"485","messageId":"486","endLine":13,"endColumn":74},{"ruleId":"483","severity":1,"message":"520","line":14,"column":8,"nodeType":"485","messageId":"486","endLine":14,"endColumn":13},{"ruleId":"483","severity":1,"message":"521","line":15,"column":8,"nodeType":"485","messageId":"486","endLine":15,"endColumn":20},{"ruleId":"483","severity":1,"message":"522","line":17,"column":7,"nodeType":"485","messageId":"486","endLine":17,"endColumn":14},{"ruleId":"483","severity":1,"message":"523","line":23,"column":12,"nodeType":"485","messageId":"486","endLine":23,"endColumn":16},{"ruleId":"483","severity":1,"message":"524","line":24,"column":12,"nodeType":"485","messageId":"486","endLine":24,"endColumn":16},{"ruleId":"483","severity":1,"message":"525","line":24,"column":18,"nodeType":"485","messageId":"486","endLine":24,"endColumn":25},{"ruleId":"483","severity":1,"message":"526","line":25,"column":12,"nodeType":"485","messageId":"486","endLine":25,"endColumn":24},{"ruleId":"483","severity":1,"message":"527","line":25,"column":26,"nodeType":"485","messageId":"486","endLine":25,"endColumn":42},{"ruleId":"483","severity":1,"message":"528","line":27,"column":11,"nodeType":"485","messageId":"486","endLine":27,"endColumn":22},{"ruleId":"483","severity":1,"message":"529","line":28,"column":11,"nodeType":"485","messageId":"486","endLine":28,"endColumn":21},{"ruleId":"483","severity":1,"message":"530","line":34,"column":38,"nodeType":"485","messageId":"486","endLine":34,"endColumn":51},{"ruleId":"483","severity":1,"message":"531","line":46,"column":11,"nodeType":"485","messageId":"486","endLine":46,"endColumn":21},{"ruleId":"502","severity":1,"message":"513","line":195,"column":84,"nodeType":"504","messageId":"505","endLine":195,"endColumn":86},{"ruleId":"483","severity":1,"message":"532","line":7,"column":8,"nodeType":"485","messageId":"486","endLine":7,"endColumn":21},{"ruleId":"483","severity":1,"message":"494","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"483","severity":1,"message":"520","line":2,"column":8,"nodeType":"485","messageId":"486","endLine":2,"endColumn":13},{"ruleId":"483","severity":1,"message":"533","line":3,"column":52,"nodeType":"485","messageId":"486","endLine":3,"endColumn":62},{"ruleId":"483","severity":1,"message":"534","line":3,"column":64,"nodeType":"485","messageId":"486","endLine":3,"endColumn":75},{"ruleId":"483","severity":1,"message":"496","line":3,"column":77,"nodeType":"485","messageId":"486","endLine":3,"endColumn":81},{"ruleId":"483","severity":1,"message":"535","line":3,"column":83,"nodeType":"485","messageId":"486","endLine":3,"endColumn":94},{"ruleId":"483","severity":1,"message":"536","line":13,"column":12,"nodeType":"485","messageId":"486","endLine":13,"endColumn":23},{"ruleId":"483","severity":1,"message":"537","line":13,"column":25,"nodeType":"485","messageId":"486","endLine":13,"endColumn":39},{"ruleId":"483","severity":1,"message":"538","line":14,"column":12,"nodeType":"485","messageId":"486","endLine":14,"endColumn":30},{"ruleId":"483","severity":1,"message":"539","line":14,"column":32,"nodeType":"485","messageId":"486","endLine":14,"endColumn":53},{"ruleId":"483","severity":1,"message":"540","line":15,"column":12,"nodeType":"485","messageId":"486","endLine":15,"endColumn":19},{"ruleId":"483","severity":1,"message":"541","line":15,"column":21,"nodeType":"485","messageId":"486","endLine":15,"endColumn":31},{"ruleId":"483","severity":1,"message":"542","line":16,"column":28,"nodeType":"485","messageId":"486","endLine":16,"endColumn":45},{"ruleId":"483","severity":1,"message":"543","line":19,"column":19,"nodeType":"485","messageId":"486","endLine":19,"endColumn":27},{"ruleId":"483","severity":1,"message":"544","line":20,"column":12,"nodeType":"485","messageId":"486","endLine":20,"endColumn":21},{"ruleId":"483","severity":1,"message":"545","line":20,"column":23,"nodeType":"485","messageId":"486","endLine":20,"endColumn":35},{"ruleId":"483","severity":1,"message":"546","line":21,"column":12,"nodeType":"485","messageId":"486","endLine":21,"endColumn":21},{"ruleId":"483","severity":1,"message":"547","line":21,"column":23,"nodeType":"485","messageId":"486","endLine":21,"endColumn":35},{"ruleId":"483","severity":1,"message":"548","line":22,"column":12,"nodeType":"485","messageId":"486","endLine":22,"endColumn":21},{"ruleId":"483","severity":1,"message":"549","line":22,"column":23,"nodeType":"485","messageId":"486","endLine":22,"endColumn":35},{"ruleId":"483","severity":1,"message":"550","line":23,"column":12,"nodeType":"485","messageId":"486","endLine":23,"endColumn":21},{"ruleId":"483","severity":1,"message":"551","line":23,"column":23,"nodeType":"485","messageId":"486","endLine":23,"endColumn":35},{"ruleId":"483","severity":1,"message":"552","line":30,"column":13,"nodeType":"485","messageId":"486","endLine":30,"endColumn":21},{"ruleId":"508","severity":1,"message":"553","line":49,"column":8,"nodeType":"510","endLine":49,"endColumn":28,"suggestions":"554"},{"ruleId":"508","severity":1,"message":"555","line":49,"column":9,"nodeType":"510","endLine":49,"endColumn":27},{"ruleId":"483","severity":1,"message":"556","line":5,"column":24,"nodeType":"485","messageId":"486","endLine":5,"endColumn":32},{"ruleId":"483","severity":1,"message":"532","line":9,"column":8,"nodeType":"485","messageId":"486","endLine":9,"endColumn":21},{"ruleId":"483","severity":1,"message":"557","line":12,"column":10,"nodeType":"485","messageId":"486","endLine":12,"endColumn":18},{"ruleId":"483","severity":1,"message":"558","line":13,"column":8,"nodeType":"485","messageId":"486","endLine":13,"endColumn":21},{"ruleId":"483","severity":1,"message":"559","line":14,"column":8,"nodeType":"485","messageId":"486","endLine":14,"endColumn":23},{"ruleId":"483","severity":1,"message":"517","line":14,"column":27,"nodeType":"485","messageId":"486","endLine":14,"endColumn":39},{"ruleId":"483","severity":1,"message":"518","line":14,"column":41,"nodeType":"485","messageId":"486","endLine":14,"endColumn":61},{"ruleId":"483","severity":1,"message":"519","line":14,"column":63,"nodeType":"485","messageId":"486","endLine":14,"endColumn":74},{"ruleId":"483","severity":1,"message":"494","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"483","severity":1,"message":"560","line":14,"column":12,"nodeType":"485","messageId":"486","endLine":14,"endColumn":19},{"ruleId":"508","severity":1,"message":"561","line":26,"column":15,"nodeType":"562","endLine":39,"endColumn":6},{"ruleId":"483","severity":1,"message":"563","line":6,"column":12,"nodeType":"485","messageId":"486","endLine":6,"endColumn":19},{"ruleId":"483","severity":1,"message":"564","line":6,"column":21,"nodeType":"485","messageId":"486","endLine":6,"endColumn":31},{"ruleId":"565","severity":1,"message":"566","line":38,"column":25,"nodeType":"567","endLine":38,"endColumn":63},{"ruleId":"568","severity":1,"message":"569","line":86,"column":118,"nodeType":"570","endLine":86,"endColumn":137},{"ruleId":"483","severity":1,"message":"571","line":14,"column":21,"nodeType":"485","messageId":"486","endLine":14,"endColumn":31},{"ruleId":"483","severity":1,"message":"572","line":5,"column":8,"nodeType":"485","messageId":"486","endLine":5,"endColumn":16},{"ruleId":"483","severity":1,"message":"573","line":6,"column":8,"nodeType":"485","messageId":"486","endLine":6,"endColumn":17},{"ruleId":"483","severity":1,"message":"574","line":7,"column":10,"nodeType":"485","messageId":"486","endLine":7,"endColumn":21},{"ruleId":"483","severity":1,"message":"575","line":21,"column":12,"nodeType":"485","messageId":"486","endLine":21,"endColumn":24},{"ruleId":"483","severity":1,"message":"576","line":22,"column":12,"nodeType":"485","messageId":"486","endLine":22,"endColumn":25},{"ruleId":"483","severity":1,"message":"577","line":23,"column":12,"nodeType":"485","messageId":"486","endLine":23,"endColumn":19},{"ruleId":"483","severity":1,"message":"578","line":24,"column":12,"nodeType":"485","messageId":"486","endLine":24,"endColumn":17},{"ruleId":"483","severity":1,"message":"579","line":24,"column":19,"nodeType":"485","messageId":"486","endLine":24,"endColumn":27},{"ruleId":"483","severity":1,"message":"494","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":25},{"ruleId":"483","severity":1,"message":"580","line":4,"column":27,"nodeType":"485","messageId":"486","endLine":4,"endColumn":31},{"ruleId":"483","severity":1,"message":"493","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":26},{"ruleId":"483","severity":1,"message":"574","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":21},{"ruleId":"483","severity":1,"message":"581","line":2,"column":23,"nodeType":"485","messageId":"486","endLine":2,"endColumn":34},{"ruleId":"483","severity":1,"message":"492","line":6,"column":9,"nodeType":"485","messageId":"486","endLine":6,"endColumn":18},{"ruleId":"483","severity":1,"message":"582","line":7,"column":8,"nodeType":"485","messageId":"486","endLine":7,"endColumn":14},{"ruleId":"483","severity":1,"message":"583","line":8,"column":8,"nodeType":"485","messageId":"486","endLine":8,"endColumn":15},{"ruleId":"584","severity":1,"message":"585","line":23,"column":29,"nodeType":"567","endLine":23,"endColumn":83},{"ruleId":"483","severity":1,"message":"586","line":2,"column":14,"nodeType":"485","messageId":"486","endLine":2,"endColumn":18},{"ruleId":"502","severity":1,"message":"513","line":9,"column":21,"nodeType":"504","messageId":"505","endLine":9,"endColumn":23},{"ruleId":"502","severity":1,"message":"513","line":13,"column":22,"nodeType":"504","messageId":"505","endLine":13,"endColumn":24},{"ruleId":"502","severity":1,"message":"513","line":17,"column":22,"nodeType":"504","messageId":"505","endLine":17,"endColumn":24},{"ruleId":"483","severity":1,"message":"587","line":8,"column":12,"nodeType":"485","messageId":"486","endLine":8,"endColumn":15},{"ruleId":"483","severity":1,"message":"588","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":16},{"ruleId":"508","severity":1,"message":"589","line":15,"column":8,"nodeType":"510","endLine":15,"endColumn":17,"suggestions":"590"},{"ruleId":"483","severity":1,"message":"591","line":171,"column":17,"nodeType":"485","messageId":"486","endLine":171,"endColumn":21},{"ruleId":"483","severity":1,"message":"592","line":14,"column":5,"nodeType":"485","messageId":"486","endLine":14,"endColumn":20},{"ruleId":"483","severity":1,"message":"593","line":19,"column":5,"nodeType":"485","messageId":"486","endLine":19,"endColumn":24},{"ruleId":"483","severity":1,"message":"594","line":28,"column":5,"nodeType":"485","messageId":"486","endLine":28,"endColumn":24},{"ruleId":"483","severity":1,"message":"595","line":21,"column":5,"nodeType":"485","messageId":"486","endLine":21,"endColumn":30},{"ruleId":"483","severity":1,"message":"596","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":29},{"ruleId":"483","severity":1,"message":"581","line":2,"column":23,"nodeType":"485","messageId":"486","endLine":2,"endColumn":34},{"ruleId":"483","severity":1,"message":"588","line":3,"column":15,"nodeType":"485","messageId":"486","endLine":3,"endColumn":21},{"ruleId":"483","severity":1,"message":"574","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":21},{"ruleId":"483","severity":1,"message":"581","line":2,"column":23,"nodeType":"485","messageId":"486","endLine":2,"endColumn":34},{"ruleId":"483","severity":1,"message":"588","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":16},{"ruleId":"508","severity":1,"message":"589","line":15,"column":8,"nodeType":"510","endLine":15,"endColumn":17,"suggestions":"597"},{"ruleId":"483","severity":1,"message":"493","line":1,"column":27,"nodeType":"485","messageId":"486","endLine":1,"endColumn":36},{"ruleId":"483","severity":1,"message":"581","line":4,"column":23,"nodeType":"485","messageId":"486","endLine":4,"endColumn":34},{"ruleId":"483","severity":1,"message":"598","line":8,"column":10,"nodeType":"485","messageId":"486","endLine":8,"endColumn":18},{"ruleId":"483","severity":1,"message":"599","line":22,"column":12,"nodeType":"485","messageId":"486","endLine":22,"endColumn":16},{"ruleId":"483","severity":1,"message":"600","line":22,"column":18,"nodeType":"485","messageId":"486","endLine":22,"endColumn":25},{"ruleId":"483","severity":1,"message":"601","line":25,"column":12,"nodeType":"485","messageId":"486","endLine":25,"endColumn":19},{"ruleId":"483","severity":1,"message":"602","line":28,"column":11,"nodeType":"485","messageId":"486","endLine":28,"endColumn":19},{"ruleId":"502","severity":1,"message":"503","line":42,"column":22,"nodeType":"504","messageId":"505","endLine":42,"endColumn":24},{"ruleId":"483","severity":1,"message":"601","line":8,"column":12,"nodeType":"485","messageId":"486","endLine":8,"endColumn":19},{"ruleId":"483","severity":1,"message":"603","line":8,"column":21,"nodeType":"485","messageId":"486","endLine":8,"endColumn":31},{"ruleId":"483","severity":1,"message":"604","line":10,"column":11,"nodeType":"485","messageId":"486","endLine":10,"endColumn":18},{"ruleId":"483","severity":1,"message":"605","line":10,"column":20,"nodeType":"485","messageId":"486","endLine":10,"endColumn":30},{"ruleId":"508","severity":1,"message":"561","line":20,"column":15,"nodeType":"562","endLine":31,"endColumn":6},{"ruleId":"508","severity":1,"message":"606","line":31,"column":8,"nodeType":"510","endLine":31,"endColumn":29,"suggestions":"607"},{"ruleId":"483","severity":1,"message":"580","line":3,"column":34,"nodeType":"485","messageId":"486","endLine":3,"endColumn":38},{"ruleId":"483","severity":1,"message":"586","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":14},{"ruleId":"483","severity":1,"message":"492","line":3,"column":41,"nodeType":"485","messageId":"486","endLine":3,"endColumn":50},{"ruleId":"483","severity":1,"message":"608","line":21,"column":12,"nodeType":"485","messageId":"486","endLine":21,"endColumn":27},{"ruleId":"483","severity":1,"message":"609","line":21,"column":29,"nodeType":"485","messageId":"486","endLine":21,"endColumn":47},{"ruleId":"483","severity":1,"message":"610","line":23,"column":12,"nodeType":"485","messageId":"486","endLine":23,"endColumn":15},{"ruleId":"508","severity":1,"message":"561","line":47,"column":15,"nodeType":"562","endLine":58,"endColumn":6},{"ruleId":"508","severity":1,"message":"606","line":58,"column":8,"nodeType":"510","endLine":58,"endColumn":29,"suggestions":"611"},{"ruleId":"502","severity":1,"message":"513","line":64,"column":25,"nodeType":"504","messageId":"505","endLine":64,"endColumn":27},{"ruleId":"483","severity":1,"message":"533","line":2,"column":35,"nodeType":"485","messageId":"486","endLine":2,"endColumn":45},{"ruleId":"483","severity":1,"message":"534","line":2,"column":47,"nodeType":"485","messageId":"486","endLine":2,"endColumn":58},{"ruleId":"483","severity":1,"message":"612","line":24,"column":21,"nodeType":"485","messageId":"486","endLine":24,"endColumn":32},{"ruleId":"508","severity":1,"message":"613","line":149,"column":8,"nodeType":"510","endLine":149,"endColumn":18,"suggestions":"614"},{"ruleId":"502","severity":1,"message":"513","line":163,"column":46,"nodeType":"504","messageId":"505","endLine":163,"endColumn":48},{"ruleId":"502","severity":1,"message":"513","line":194,"column":38,"nodeType":"504","messageId":"505","endLine":194,"endColumn":40},{"ruleId":"483","severity":1,"message":"615","line":3,"column":8,"nodeType":"485","messageId":"486","endLine":3,"endColumn":14},"no-native-reassign",["616"],"no-negated-in-lhs",["617"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'CONTACT_LIST_REQUEST' is defined but never used.","'CONTACT_LIST_SUCCESS' is defined but never used.","'CONTACT_LIST_FAIL' is defined but never used.",["616"],["617"],"'Container' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'ListGroup' is defined but never used.","'Navs' is defined but never used.","'Navs2' is defined but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'sdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'order', and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["618"],"'deleteHandler' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Carousel' is defined but never used.","'Modal' is defined but never used.","'ReactImageMagnify' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'axios' is defined but never used.","'ProductChart' is defined but never used.","'baseURL' is assigned a value but never used.","'show' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'predictPrice' is assigned a value but never used.","'setPredict_price' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'price_history' is assigned a value but never used.","'product_id' is assigned a value but never used.","'FormContainer' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'ButtonGroup' is defined but never used.","'coupon_code' is assigned a value but never used.","'setCoupon_code' is assigned a value but never used.","'coupon_code_status' is assigned a value but never used.","'setCoupon_code_status' is assigned a value but never used.","'user_id' is assigned a value but never used.","'setUser_id' is assigned a value but never used.","'setTotal_discount' is assigned a value but never used.","'setCount' is assigned a value but never used.","'coinPrice' is assigned a value but never used.","'setCoinPrice' is assigned a value but never used.","'userCoins' is assigned a value but never used.","'setUserCoins' is assigned a value but never used.","'leftCoins' is assigned a value but never used.","'setLeftCoins' is assigned a value but never used.","'coupon_id' is assigned a value but never used.","'setCoupon_id' is assigned a value but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'order._id', and 'success'. Either include them or remove the dependency array.",["619"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","'FormText' is defined but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'ReactHtmlParser' is defined but never used.","'element' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'contact' is assigned a value but never used.","'setContact' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setMessage' is assigned a value but never used.","'Todolist' is defined but never used.","'PieCharts' is defined but never used.","'useDispatch' is defined but never used.","'newCustomers' is assigned a value but never used.","'pendingOrders' is assigned a value but never used.","'revenue' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Card' is defined but never used.","'useSelector' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","'cur' is assigned a value but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["620"],"'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ResponsiveContainer' is defined but never used.",["621"],"'register' is defined but never used.","'isOk' is assigned a value but never used.","'setIsOk' is assigned a value but never used.","'success' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'baseURL'. Either include it or remove the dependency array.",["622"],"'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'err' is assigned a value but never used.",["623"],"'setLoadding' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["624"],"'Rating' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"629","fix":"631"},{"desc":"632","fix":"633"},{"desc":"632","fix":"634"},{"desc":"635","fix":"636"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, userInfo, order, history]",{"range":"637","text":"638"},"Update the dependencies array to be: [dispatch, history, order._id, success]",{"range":"639","text":"640"},"Update the dependencies array to be: [history, keyword]",{"range":"641","text":"642"},{"range":"643","text":"642"},"Update the dependencies array to be: [baseURL, id, token, userInfo]",{"range":"644","text":"645"},{"range":"646","text":"645"},"Update the dependencies array to be: [category, config]",{"range":"647","text":"648"},[2272,2319],"[dispatch, orderId, successPay, successDeliver, userInfo, order, history]",[2064,2084],"[dispatch, history, order._id, success]",[398,407],"[history, keyword]",[393,402],[957,978],"[baseURL, id, token, userInfo]",[1754,1775],[5130,5140],"[category, config]"]